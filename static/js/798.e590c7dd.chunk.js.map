{"version":3,"file":"static/js/798.e590c7dd.chunk.js","mappings":"i1IAKaA,EAAUC,EAAAA,KAAKC,IAC1BC,4BACA,SAACC,EAAKC,EAAKC,GACT,IAAMC,GAAOC,EAAAA,EAAAA,GAAUJ,EAAIK,IAAIC,aAAaR,IAAI,QAAS,IAEzD,OAAKE,EAAIK,IAAIC,aAAaC,IAAI,QAGxBJ,KAAQK,EAGPP,EACLC,EAAIO,OAAO,KACXP,EAAIQ,MAAIC,EAAAA,EAAAA,GAAC,CACPR,KAAAA,GACIK,EAAsBL,MANrBF,EAAIC,EAAIO,OAAO,KAAMP,EAAIQ,KAAK,SAADE,OAAUT,EAAI,iBAH3CF,EAAIC,EAAIO,OAAO,KAAMP,EAAIQ,KAAK,8BAYzC,I,oBCjBWG,EAAchB,EAAAA,KAAKC,IAC9BC,gCACA,SAACC,EAAKC,EAAKC,GACT,IAAMY,GAAYC,EAAAA,EAAAA,GAAQC,OAAOC,KAAKT,IAAWU,MAAM,GACvD,OAAOjB,EAAIC,EAAIO,OAAO,KAAMP,EAAIQ,MAAKS,EAAAA,EAAAA,GAAeX,EAAUM,IAChE,ICNWM,EAAcvB,EAAAA,KAAKC,IAC9BC,gCACA,SAACC,EAAKC,EAAKC,GACT,IAAMmB,GAAQjB,EAAAA,EAAAA,GAAUJ,EAAIK,IAAIC,aAAaR,IAAI,KAAM,IACjDgB,EAAYE,OAAOC,KAAKT,GAC3Bc,QAAO,SAACC,GAAQ,OAAKA,EAASC,cAAcC,SAASJ,EAAM,IAC3DK,MAAK,SAACC,EAAGC,GAER,IAAMC,EAAaF,EAAEH,cACfM,EAAaF,EAAEJ,cAEfO,EAAcF,EAAWG,QAAQX,GACjCY,EAAcH,EAAWE,QAAQX,GAEvC,OAAIU,IAAgBE,EAEXJ,EAAWK,cAAcJ,GAEzBC,EAAcE,CAEzB,IAEF,OAAKjC,EAAIK,IAAIC,aAAaC,IAAI,KAGL,IAArBO,EAAUqB,OACLlC,EACLC,EAAIO,OAAO,KACXP,EAAIQ,KAAK,6BAADE,OAA8BS,EAAK,OAGxCpB,EAAIC,EAAIO,OAAO,KAAMP,EAAIQ,MAAKS,EAAAA,EAAAA,GAAeX,EAAUM,KARrDb,EAAIC,EAAIO,OAAO,KAAMP,EAAIQ,KAAK,+BASzC,IC/BW0B,GAASC,EAAAA,EAAAA,aAAYzC,EAASiB,EAAaO,E","sources":["mocks/api/getClub.ts","mocks/api/getTopClubs.ts","mocks/api/searchClubs.ts","mocks/browser.ts"],"sourcesContent":["import { defaultTo } from \"lodash-es\";\nimport { rest } from \"msw\";\nimport { ClubJson } from \"../../models/clubTypes\";\nimport clubJson from \"../clubs.json\";\n\nexport const getClub = rest.get(\n  process.env.PUBLIC_URL + \"/api/getClub\",\n  (req, res, ctx) => {\n    const name = defaultTo(req.url.searchParams.get(\"name\"), \"\");\n\n    if (!req.url.searchParams.has(\"name\")) {\n      return res(ctx.status(400), ctx.json(\"Bad request: no name param\"));\n    }\n    if (!(name in clubJson)) {\n      return res(ctx.status(404), ctx.json(`Club \"${name}\" not found`));\n    }\n    return res(\n      ctx.status(200),\n      ctx.json({\n        name,\n        ...(clubJson as ClubJson)[name]\n      })\n    );\n  }\n);\n","import { shuffle } from \"lodash-es\";\nimport { rest } from \"msw\";\nimport { createClubList } from \"../../util/misc\";\nimport clubJson from \"../clubs.json\";\n\n/** currently returns 6 random clubs */\nexport const getTopClubs = rest.get(\n  process.env.PUBLIC_URL + \"/api/getTopClubs\",\n  (req, res, ctx) => {\n    const clubNames = shuffle(Object.keys(clubJson)).slice(6);\n    return res(ctx.status(200), ctx.json(createClubList(clubJson, clubNames)));\n  }\n);\n","import { defaultTo } from \"lodash-es\";\nimport { rest } from \"msw\";\nimport { createClubList } from \"../../util/misc\";\nimport clubJson from \"../clubs.json\";\n\nexport const searchClubs = rest.get(\n  process.env.PUBLIC_URL + \"/api/searchClubs\",\n  (req, res, ctx) => {\n    const query = defaultTo(req.url.searchParams.get(\"q\"), \"\");\n    const clubNames = Object.keys(clubJson)\n      .filter((clubName) => clubName.toLowerCase().includes(query))\n      .sort((a, b) => {\n        // really inefficient since it keeps converting to lowercase\n        const lowerCaseA = a.toLowerCase();\n        const lowerCaseB = b.toLowerCase();\n        // sort by index query appears at in the name\n        const queryIndexA = lowerCaseA.indexOf(query);\n        const queryIndexB = lowerCaseB.indexOf(query);\n\n        if (queryIndexA === queryIndexB) {\n          // tiebreaker: compare normally (ignoring case)\n          return lowerCaseA.localeCompare(lowerCaseB);\n        } else {\n          return queryIndexA - queryIndexB;\n        }\n      });\n\n    if (!req.url.searchParams.has(\"q\")) {\n      return res(ctx.status(400), ctx.json(\"Bad request: no query param\"));\n    }\n    if (clubNames.length === 0) {\n      return res(\n        ctx.status(404),\n        ctx.json(`No clubs found for query \"${query}\"`)\n      );\n    }\n    return res(ctx.status(200), ctx.json(createClubList(clubJson, clubNames)));\n  }\n);\n","import { setupWorker } from \"msw\";\nimport { getClub } from \"./api/getClub\";\nimport { getTopClubs } from \"./api/getTopClubs\";\nimport { searchClubs } from \"./api/searchClubs\";\n\n// add more handlers in the args of setupWorker\nexport const worker = setupWorker(getClub, getTopClubs, searchClubs);\n"],"names":["getClub","rest","get","process","req","res","ctx","name","defaultTo","url","searchParams","has","clubJson","status","json","_objectSpread","concat","getTopClubs","clubNames","shuffle","Object","keys","slice","createClubList","searchClubs","query","filter","clubName","toLowerCase","includes","sort","a","b","lowerCaseA","lowerCaseB","queryIndexA","indexOf","queryIndexB","localeCompare","length","worker","setupWorker"],"sourceRoot":""}